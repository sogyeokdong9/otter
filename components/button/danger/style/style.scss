@charset 'utf-8';

:root {
  --otter-black: rgba(0. 0, 0, 1);
  --otter-white: rgba(255, 255, 255, 1);
  --otter-transparent: rgba(0. 0, 0, 0);

	--otter-primary-color: rgba(24, 144, 255, 1);
  --otter-primary-color-hover: rgba(64, 169, 255, 1);
  --otter-primary-color-active: rgba(9, 109, 217, 1);
  --otter-primary-color-outline: rgba(24, 144, 255, .2);

  --otter-btn-spacing: 8px;
  --otter-btn-dangerous: rgba(255, 77, 79, 1);
  --otter-btn-dangerous-hover: rgba(255, 120, 117, 1);
  --otter-btn-dangerous-bg: var(--otter-white);
  --otter-btn-dangerous-bg-hover: var(--otter-white);
  --otter-btn-dangerous-border: rgba(255, 77, 79, 1);
  --otter-btn-dangerous-border-hover: rgba(255, 120, 117, 1);
  --otter-btn-dangerous-box-shadow: rgba(0, 0, 0, 0.05);
  --otter-btn-dangerous-text-shadow: rgb(0, 0, 0, 0.12);

  --otter-btn-primary: var(--otter-white);
  --otter-btn-primary-hover: var(--otter-white);
  --otter-btn-primary-bg: var(--otter-primary-color);
  --otter-btn-primary-bg-hover: var(--otter-primary-color-hover);
  --otter-btn-primary-border: rgba(24, 144, 255, 1);
  --otter-btn-primary-border-hover: rgba(24, 144, 255, 1);
  --otter-btn-primary-box-shadow: rgba(0, 0, 0, 0.05);
  --otter-btn-primary-text-shadow: rgba(0, 0, 0, 0.12);

  --otter-btn-default: rgba(0, 0, 0, 0.85);
  --otter-btn-default-hover: var(--otter-primary-color-hover);
  --otter-btn-default-bg: var(--otter-white);
  --otter-btn-default-bg-hover: var(--otter-white);
  --otter-btn-default-border: rgba(217, 217, 217, 1);
  --otter-btn-default-border-hover: var(--otter-primary-color-hover);
  --otter-btn-default-box-shadow: rgba(0, 0, 0, 0.02);
  --otter-btn-default-text-shadow: none;

  --otter-btn-dashed: rgba(0, 0, 0, 0.85);
  --otter-btn-dashed-hover: var(--otter-primary-color-hover);
  --otter-btn-dashed-bg: var(--otter-white);
  --otter-btn-dashed-bg-hover: var(--otter-white);
  --otter-btn-dashed-border: rgba(217, 217, 217, 1);
  --otter-btn-dashed-border-hover: var(--otter-primary-color-hover);
  --otter-btn-dashed-box-shadow: rgba(0, 0, 0, 0.02);
  --otter-btn-dashed-text-shadow: none;

  --otter-btn-text: rgba(0, 0, 0, 0.85);
  --otter-btn-text-hover: var(--otter-primary-color-hover);
  --otter-btn-text-bg: var(--otter-transparent); // transparent 
  --otter-btn-text-bg-hover: rgba(0, 0, 0, 0.018);
  --otter-btn-text-border: var(--otter-transparent); // transparent
  --otter-btn-text-border-hover: var(--otter-transparent); // transparent
  --otter-btn-text-box-shadow: none;
  --otter-btn-text-text-shadow: none;

  --otter-btn-link: rgba(24, 144, 255, 1)  ;
  --otter-btn-link-hover: rgba(24, 144, 255, 1)  ;
  --otter-btn-link-bg: var(--otter-transparent); // transparent
  --otter-btn-link-bg-hover: var(--otter-transparent); // transparent
  --otter-btn-link-border: var(--otter-transparent); // transparent
  --otter-btn-link-border-hover: var(--otter-transparent); // transparent
  --otter-btn-link-box-shadow: none;
  --otter-btn-link-text-shadow: none;

  --otter-btn-disabled-default: rgba(0, 0, 0, 0.25);
  --otter-btn-disabled-default-hover: rgba(0, 0, 0, 0.25);
  --otter-btn-disabled-default-bg: rgba(245, 245, 245, 1);
  --otter-btn-disabled-default-bg-hover: rgba(245, 245, 245, 1);
  --otter-btn-disabled-default-border:rgba(217, 217, 217, 1);
  --otter-btn-disabled-default-border-hover:rgba(217, 217, 217, 1);
  --otter-btn-disabled-default-box-shadow: none;
  --otter-btn-disabled-default-text-shadow: none;

  --otter-btn-disabled-text: rgba(0, 0, 0, 0.25);
  --otter-btn-disabled-text-bg: 0 0;
  --otter-btn-disabled-text-border: var(--otter-transparent); // transparent
  --otter-btn-disabled-text-box-shadow: none;
  --otter-btn-disabled-text-text-shadow: none;

  --otter-btn-disabled-link: rgba(0, 0, 0, 0.25);
  --otter-btn-disabled-link-bg: var(--otter-transparent);
  --otter-btn-disabled-link-border: var(--otter-transparent); // transparent
  --otter-btn-disabled-link-box-shadow: none;
  --otter-btn-disabled-link-text-shadow: none;
}


$btns-data: (
  otter-btn: solid,
  default: solid,
  primary: solid,
  dashed: dashed,
  text: none,
  link: none,
  dangerous: solid,
);

@each $btn, $border in $btns-data {
  @if $btn == otter-btn {
    .otter-btn {
      height: 32px;
      padding: 4px 15px;
      border: 1px solid transparent;
      border-color: var(--otter-btn-default-border);
      border-radius: 2px;
      background: var(--otter-btn-default-bg);
      background-image: none;
      box-shadow: 0 2px 0 var(--otter-btn-default-box-shadow);
      font-size: 14px;
      font-weight: 400;
      line-height: 1.5715;
      color: var(--otter-btn-default);
      transition: all .3s cubic-bezier(0.22, 0.68, 0, 1);
      &:hover,
      &:focus {
        border-color: var(--otter-primary-color-hover);
        background: var(--otter-btn-default-bg);
        color: var(--otter-primary-color-hover);
        text-decoration: none;
      }
      &:hover>a:only-child,
      &:focus>a:only-child {
        @extend %otter-btn-a-child;
      }
      &:hover>a:only-child:after,
      &:focus>a:only-child:after {
        @extend %otter-btn-a-child-after;
      }
      & + & {
        margin-left: var(--otter-btn-spacing);
      }
    }
  } @else {
    .otter-btn-#{$btn} {
      border-style: #{$border};
      border-color: var(--otter-btn-#{$btn}-border);
      background: var(--otter-btn-#{$btn}-bg);
      box-shadow: 0 2px 0 var(--otter-btn-#{$btn}-box-shadow);
      color: var(--otter-btn-#{$btn});
      &:hover,
      &:focus {
        border-color: var(--otter-btn-#{$btn}-border-hover);
        background: var(--otter-btn-#{$btn}-bg-hover);
        color: var(--otter-btn-#{$btn}-hover);
      }
      &:hover>a:only-child,
      &:focus>a:only-child {
        @extend %otter-btn-a-child;
      }
      &:hover>a:only-child:after,
      &:focus>a:only-child:after {
        @extend %otter-btn-a-child-after;
      }
    }
  }
}

// otter-btn otter-btn-default otter-btn-dangerous

.otter-btn-primary {
  &.otter-btn-dangerous {
    background-color: var(--otter-btn-dangerous);
    border-color: var(--otter-btn-dangerous);
    color: #ffffff;
    &:hover,
    &:focus {
      border-color: var(--otter-btn-dangerous-hover);
      background: var(--otter-btn-dangerous-hover);
      color: #ffffff;
    }
  }
}

.otter-btn-dashed {
  &.otter-btn-dangerous {
    border-style: dashed;
    text-shadow: none;
    box-shadow: rgba(0, 0, 0, 0.02);
  }
}

.otter-btn {
  &.otter-btn-dangerous {
    // border: solid;
    text-shadow: none;
    box-shadow: rgba(0, 0, 0, 0.02);
  }
}

.otter-btn-text {
  &.otter-btn-dangerous {
    border: none;
    text-shadow: none;
    box-shadow: none;
    &:hover,
    &:focus {
      background: rgba(0, 0, 0, 0.018);
    }
  }
}

.otter-btn-link {
  &.otter-btn-dangerous {
    border: none;
    text-shadow: none;
    box-shadow: none;
  }
}



// .otter-btn-primary {
  // @each문울 통하여 자동생성
// }

// .otter-btn-dashed {
  // @each문울 통하여 자동생성
// }

// .otter-btn-text {
  // @each문울 통하여 자동생성
// }

// .otter-btn-link {
  // @each문울 통하여 자동생성
// }

.otter-btn[disabled],
.otter-btn[disabled]:hover,
.otter-btn[disabled]:focus,
.otter-btn[disabled]:active {
  @extend %otter-btn-disabled-filled;
}
.otter-btn[disabled]>a:only-child,
.otter-btn[disabled]:hover>a:only-child,
.otter-btn[disabled]:focus>a:only-child,
.otter-btn[disabled]:active>a:only-child {
  @extend %otter-btn-a-child;
}
.otter-btn[disabled]>a:only-child:after,
.otter-btn[disabled]:hover>a:only-child:after,
.otter-btn[disabled]:focus>a:only-child:after,
.otter-btn[disabled]:active>a:only-child:after {
  @extend %otter-btn-a-child-after;
}
.otter-btn-primary[disabled],
.otter-btn-primary[disabled]:hover,
.otter-btn-primary[disabled]:focus,
.otter-btn-primary[disabled]:active {
  @extend %otter-btn-disabled-filled;
}
.otter-btn-primary[disabled]>a:only-child,
.otter-btn-primary[disabled]:hover>a:only-child,
.otter-btn-primary[disabled]:focus>a:only-child,
.otter-btn-primary[disabled]:active>a:only-child {
  @extend %otter-btn-a-child;
}
.otter-btn-primary[disabled]>a:only-child:after,
.otter-btn-primary[disabled]:hover>a:only-child:after,
.otter-btn-primary[disabled]:focus>a:only-child:after,
.otter-btn-primary[disabled]:active>a:only-child:after {
  @extend %otter-btn-a-child-after;
}
.otter-btn-dashed[disabled],
.otter-btn-dashed[disabled]:hover,
.otter-btn-dashed[disabled]:focus,
.otter-btn-dashed[disabled]:active {
  @extend %otter-btn-disabled-filled;
}
.otter-btn-dashed[disabled]>a:only-child,
.otter-btn-dashed[disabled]:hover>a:only-child,
.otter-btn-dashed[disabled]:focus>a:only-child,
.otter-btn-dashed[disabled]:active>a:only-child {
  @extend %otter-btn-a-child;
}
.otter-btn-dashed[disabled]>a:only-child:after,
.otter-btn-dashed[disabled]:hover>a:only-child:after,
.otter-btn-dashed[disabled]:focus>a:only-child:after,
.otter-btn-dashed[disabled]:active>a:only-child:after {
  @extend %otter-btn-a-child-after;
}
.otter-btn-text[disabled],
.otter-btn-text[disabled]:hover,
.otter-btn-text[disabled]:focus,
.otter-btn-text[disabled]:active {
  @extend %otter-btn-disabled-unfilled;
}
.otter-btn-text[disabled]>a:only-child,
.otter-btn-text[disabled]:hover>a:only-child,
.otter-btn-text[disabled]:focus>a:only-child,
.otter-btn-text[disabled]:active>a:only-child {
  @extend %otter-btn-a-child;
}
.otter-btn-text[disabled]>a:only-child:after,
.otter-btn-text[disabled]:hover>a:only-child:after,
.otter-btn-text[disabled]:focus>a:only-child:after,
.otter-btn-text[disabled]:active>a:only-child:after {
  @extend %otter-btn-a-child-after;
}
.otter-btn-link[disabled],
.otter-btn-link[disabled]:hover,
.otter-btn-link[disabled]:focus,
.otter-btn-link[disabled]:active {
  @extend %otter-btn-disabled-unfilled;
}
.otter-btn-link[disabled]>a:only-child,
.otter-btn-link[disabled]:hover>a:only-child,
.otter-btn-link[disabled]:focus>a:only-child,
.otter-btn-link[disabled]:active>a:only-child {
  @extend %otter-btn-a-child;
}
.otter-btn-link[disabled]>a:only-child:after,
.otter-btn-link[disabled]:hover>a:only-child:after,
.otter-btn-link[disabled]:focus>a:only-child:after,
.otter-btn-link[disabled]:active>a:only-child:after {
  @extend %otter-btn-a-child-after;
}


// - hover
// - active
// - focus
// - focus-whithin
// - Chain Reaction

/* This CSS will print because %otter-btn-disabled-filled is extended. */
%otter-btn-disabled-filled {
  border-color: var(--otter-btn-disabled-default-border);
  background: var(--otter-btn-disabled-default-bg);
  box-shadow: var(--otter-btn-disabled-default-box-shadow);
  color: var(--otter-btn-disabled-default);
  text-shadow: var(--otter-btn-disabled-default-text-shadow);
}
%otter-btn-disabled-unfilled {
	border-color: var(--otter-btn-disabled-link-border);
  background: var(--otter-btn-disabled-link-bg);
	box-shadow: var(--otter-btn-disabled-link-box-shadow);
	color: var(--otter-btn-disabled-link);
	text-shadow: var(--otter-btn-disabled-link-text-shadow);
}
%otter-btn-a-child {
	color: currentcolor;
}
%otter-btn-a-child-after {
	position: absolute;
	inset: 0;
	content: "";
	background: 0 0;
}
